<% if current_user %>
<div class="pad-down">
    <h4> <small>Name: <%= current_user.username %> </small>,you're logged in bro</h4>
</div>

<<<<<<< HEAD
<div id="map-canvas">
    <b>Start: </b>
    <select id="start">
      <option value="penn station, new york, ny">Penn Station</option>
      <option value="grand central station, new york, ny">Grand Central Station</option>
      <option value="625 8th Avenue, New York, NY, 10018">Port Authority Bus Terminal</option>
      <option value="staten island ferry terminal, new york, ny">Staten Island Ferry Terminal</option>
      <option value="101 E 125th Street, New York, NY">Harlem - 125th St Station</option>
    </select>
    <b>End: </b>
    <select id="end">
      <option value="260 Broadway New York NY 10007">City Hall</option>
      <option value="W 49th St 	&amp; 5th Ave, New York, NY 10020">Rockefeller Center</option>
      <option value="moma, New York, NY">MOMA</option>
      <option value="350 5th Ave, New York, NY, 10118">Empire State Building</option>
      <option value="253 West 125th Street, New York, NY">Apollo Theater</option>
      <option value="1 Wall St, New York, NY">Wall St</option>
    </select>
    <select id="mode">
     <option value="DRIVING">Driving</option>
     <option value="WALKING">Walking</option>
     <option value="BICYCLING">Bicycling</option>
     <option value="TRANSIT">Transit</option>
   </select>
    </div>
    <div id="map"></div>
    &nbsp;
    <div id="warnings-panel"></div>
    <script type="text/javascript">
    function initMap() {
            var markerArray = [];

            var trafficLayer = new google.maps.TrafficLayer();
            trafficLayer.setMap(map);

            // Instantiate a directions service.
            var directionsService = new google.maps.DirectionsService;

            // Create a map and center it on Manhattan.
            var map = new google.maps.Map(document.getElementById('map'), {
              zoom: 13,
              center: {lat: 40.771, lng: -73.974}
            });

            // Create a renderer for directions and bind it to the map.
            var directionsDisplay = new google.maps.DirectionsRenderer({map: map});
=======
<div id="map"></div>
  <div id="right-panel">
  <div>
  <b>Start:</b>
  <select id="start">
    <option value="Halifax, NS">Halifax, NS</option>
    <option value="Boston, MA">Boston, MA</option>
    <option value="New York, NY">New York, NY</option>
    <option value="Miami, FL">Miami, FL</option>
  </select>
  <br>
  <b>Waypoints:</b> <br>
  <i>(Ctrl-Click for multiple selection)</i> <br>
  <select multiple id="waypoints">
    <option value="montreal, quebec">Montreal, QBC</option>
    <option value="toronto, ont">Toronto, ONT</option>
    <option value="chicago, il">Chicago</option>
    <option value="winnipeg, mb">Winnipeg</option>
    <option value="fargo, nd">Fargo</option>
    <option value="calgary, ab">Calgary</option>
    <option value="spokane, wa">Spokane</option>
  </select>
  <br>
  <b>End:</b>
  <select id="end">
    <option value="Vancouver, BC">Vancouver, BC</option>
    <option value="Seattle, WA">Seattle, WA</option>
    <option value="San Francisco, CA">San Francisco, CA</option>
    <option value="Los Angeles, CA">Los Angeles, CA</option>
  </select>
  <br>
    <input type="submit" id="submit">
  </div>
  <div id="directions-panel"></div>
  </div>
  <script>
    function initMap() {
      var directionsService = new google.maps.DirectionsService;
      var directionsDisplay = new google.maps.DirectionsRenderer;
      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 6,
        center: {lat: 41.85, lng: -87.65}
      });
      directionsDisplay.setMap(map);
>>>>>>> 4f2f16570447bca7db195b250fb924e4b5f47220

      document.getElementById('submit').addEventListener('click', function() {
        calculateAndDisplayRoute(directionsService, directionsDisplay);
      });
    }

<<<<<<< HEAD
            // Display the route between the initial start and end selections.
            calculateAndDisplayRoute(
                directionsDisplay, directionsService, markerArray, stepDisplay, map);
            // Listen to change events from the start and end lists.
            var onChangeHandler = function() {
              calculateAndDisplayRoute(
                  directionsDisplay, directionsService, markerArray, stepDisplay, map);
            };
            document.getElementById('start').addEventListener('change', onChangeHandler);
            document.getElementById('end').addEventListener('change', onChangeHandler);
          }

          function calculateAndDisplayRoute(directionsDisplay, directionsService,
              markerArray, stepDisplay, map) {
                var selectedMode = document.getElementById('mode').value;
            // First, remove any existing markers from the map.
            for (var i = 0; i < markerArray.length; i++) {
              markerArray[i].setMap(null);
            }

            // Retrieve the start and end locations and create a DirectionsRequest using
            // WALKING directions.
            directionsService.route({
              origin: document.getElementById('start').value,
              destination: document.getElementById('end').value,
              travelMode: google.maps.TravelMode[selectedMode]
            }, function(response, status) {
              // Route the directions and pass the response to a function to create
              // markers for each step.
              if (status === google.maps.DirectionsStatus.OK) {
                document.getElementById('warnings-panel').innerHTML =
                    '<b>' + response.routes[0].warnings + '</b>';
                directionsDisplay.setDirections(response);
                showSteps(response, markerArray, stepDisplay, map);
              } else {
                window.alert('Directions request failed due to ' + status);
              }
            });
=======
    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
      var waypts = [];
      var checkboxArray = document.getElementById('waypoints');
      for (var i = 0; i < checkboxArray.length; i++) {
        if (checkboxArray.options[i].selected) {
          waypts.push({
            location: checkboxArray[i].value,
            stopover: true
          });
        }
      }

      directionsService.route({
        origin: document.getElementById('start').value,
        destination: document.getElementById('end').value,
        waypoints: waypts,
        optimizeWaypoints: true,
        travelMode: google.maps.TravelMode.DRIVING
      }, function(response, status) {
        if (status === google.maps.DirectionsStatus.OK) {
          directionsDisplay.setDirections(response);
          var route = response.routes[0];
          var summaryPanel = document.getElementById('directions-panel');
          summaryPanel.innerHTML = '';
          // For each route, display summary information.
          for (var i = 0; i < route.legs.length; i++) {
            var routeSegment = i + 1;
            summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                '</b><br>';
            summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
            summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
            summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
>>>>>>> 4f2f16570447bca7db195b250fb924e4b5f47220
          }
        } else {
          window.alert('Directions request failed due to ' + status);
        }
      });
    }
  </script>
  <script async defer

      src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['secret_google_key'] %>&callback=initMap">
  </script>

<% else %>

<!-- Jumbotron Start -->
<div class="jumbotron">
  <div class="container">
    <h1>Hello, world!</h1>
    <p>This is a template for a simple marketing or informational website. It includes a large callout called a jumbotron and three supporting pieces of content. Use it as a starting point to create something more unique.</p>
    <p> <%= link_to "Sign Up", new_user_path, class: "btn btn-primary btn-lg" %> </p>
  </div>
</div>
<!-- Jumbotron End -->

<% end %>
